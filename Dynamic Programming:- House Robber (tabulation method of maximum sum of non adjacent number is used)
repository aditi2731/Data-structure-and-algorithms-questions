long long int solve(vector<int>&nums){
    long long int n= nums.size();
    vector<int>dp(n,0);
    dp[0]= nums[0];

    for(int i=1; i<n; i++){
        long long int incl= dp[i-2]+nums[i];
        long long int excl= dp[i-1]+0;
        dp[i]= max(incl, excl);
    }
    return dp[n-1];
}
long long int houseRobber(vector<int>& valueInHouse)
{
    // Write your code here.
    int n= valueInHouse.size();

    if(n==1)
    return valueInHouse[0];

    vector<int>first,second;
    for(int i=0; i<n; i++){
        if(i !=n-1)
        first.push_back(valueInHouse[i]);

        if(i !=0)
        second.push_back(valueInHouse[i]);
    }
    return max(solve(first), solve(second));
}
