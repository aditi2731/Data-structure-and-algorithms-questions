class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int last = m+n-1;
        while(m>0 && n>0){
            if(nums1[m-1]>nums2[n-1]){
                nums1[last]=nums1[m-1];
                m-=1;
            }
            else{
                nums1[last]=nums2[n-1];
                n-=1;
            }
            last -=1;
        }
        while(n>0){
            nums1[last]=nums2[n-1];
            n-=1;
            last -=1;
        }
    }
};




#include <iostream>
using namespace std;
void merge(int arr1[],int n, int arr2[], int m, int arr3[],int o){
    int i=0;
    int j=0;
    int k=0;
    while(i<n && j<m){
        if(arr1[i]<arr2[j]){
            arr3[k++]=arr1[i++];
        }
        else{
            arr3[k++]=arr2[j++];
        }
    }
    while(i<n){
        arr3[k++]=arr1[i++];
    }
    while(j<n){
        arr3[k++]=arr2[j++];
    }
}
void print(int ans[],int n){
    for(int i=0;i<n; i++){
        cout<<ans[i]<<" ";
    }
}
int main() {
	int arr1[5]={1,3,5,7,9};
	int arr2[3]={2,4,6};
	int arr3[8]={0};
	merge(arr1,5,arr2,3,arr3,8);
	print(arr3,8);
	return 0;
} 
