//{ Driver Code Starts
// Initial template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
// User function template in C++

class Solution {
  public:
    // Function to find minimum number of pages.
    bool isPossible(int n, int arr[],int m,int mid){
        long long studentcount=1;
        long long int pagesum=0;
        for(int i=0;i<n;i++){
            if(pagesum + arr[i] <= mid){
                pagesum += arr[i];
            }
            else{
                studentcount++;
                if(studentcount > m || arr[i] > mid){
                    return false;
                }
                pagesum=arr[i];
            }
        }
        return true;
    }
    long long findPages(int n, int arr[], int m) {
        // code here
        long long int s=0;
        long long sum=0;
        for(int i=0; i<n;i++){
            sum+=arr[i];
        }
        long long int e= sum;
        long long int ans=-1;
        long long int mid= s+(e-s)/2;
        while(s<=e){
            if(m>n){
                return ans;
            }
           else if(isPossible(n,arr,m,mid)){
                ans=mid;
                e=mid-1;
            }
            else{
                s=mid+1;
            }
            mid=s+(e-s)/2;
        }
        return ans;
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        int A[n];
        for (int i = 0; i < n; i++) {
            cin >> A[i];
        }
        int m;
        cin >> m;
        Solution ob;
        cout << ob.findPages(n, A, m) << endl;
    }
    return 0;
}

// } Driver Code Ends
