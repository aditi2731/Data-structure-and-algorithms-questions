//{ Driver Code Starts
//Initial template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function template for C++

// s : given string to search
// dictionary : vector of available strings

class Solution
{
public:
int dp[3011];
int help(int i, string s, set <string>&dictionary){
    if(i==s.size())return 1;
    string temp;
    if (dp[i] != -1)return dp[i];
    for(int j=i;j<s.size();j++){
        temp += s[j];
        if(dictionary.find(temp) != dictionary.end()){
            if(help(j+1,s,dictionary))return dp[i]=1;;
        }
    }
    return dp[i]=0;
}
    int wordBreak(int n, string s, vector<string> &dictionary) {
        //code here
         set<string>st;
        memset (dp,-1,sizeof dp);
        for(auto a : dictionary) st.insert(a);
        return help(0,s,st);
    }
};

//{ Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        vector<string> dictionary;
        for(int i=0;i<n;i++){
            string S;
            cin>>S;
            dictionary.push_back(S);
        }
        string s;
        cin>>s;
        Solution ob;
        cout<<ob.wordBreak(n, s, dictionary)<<"\n";
    }
}

// } Driver Code Ends
