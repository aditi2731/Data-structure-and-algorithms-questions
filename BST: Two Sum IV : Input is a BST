void inorder(BinaryTreeNode<int>*root,vector<int> &in){
    if(root==NULL)
    return;

    inorder(root->left,in);
    in.push_back(root->data);
    inorder(root->right,in);
}
bool twoSumInBST(BinaryTreeNode<int>* root, int target) {
	
    //solve inorder sorted->val
    vector<int>inorderval;
    inorder(root,inorderval);
    //use 2 pointer approach to check if pair exist
    int i=0,j=inorderval.size()-1;
    while(i<j){
        int sum=inorderval[i]+inorderval[j];
        if(sum==target)
        return true;
        else if(sum>target)
        j--;
        else
        i++;
    }
    return false;
}
